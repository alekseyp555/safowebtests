buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.3"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'io.qameta.allure'
compileJava.options.encoding = 'UTF-8'

group 'safowebtest'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    cucumberRuntime.extendsFrom testRuntime
    agent
}

dependencies {
    compile 'org.seleniumhq.selenium:selenium-java:3.14.0'  
    compile 'org.testng:testng:6.14.3'
    compile 'io.cucumber:cucumber-java:4.2.0'
    compile 'io.cucumber:cucumber-testng:4.2.0'
    compile 'io.qameta.allure:allure-cucumber3-jvm:2.8.1'
    agent 'org.aspectj:aspectjweaver:1.9.2'
    compile 'ru.yandex.qatools.allure:allure-testng-adaptor:1.5.4'
    compile 'ch.qos.logback:logback-classic:1.2.3'
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'src/test/java/stepDef', 'src/test/java/utility', 'src/test/java/features']
        }
    }
}

test.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

test {
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
    if(project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}

//для логгирования тестов
test {
    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}

//для кириллицы ч2
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

allure {
    version = '2.2.1'
    autoconfigure = true
    aspectjweaver = true
}
